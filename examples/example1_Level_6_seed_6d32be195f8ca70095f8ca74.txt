Original seed
100110101111000100110101111000100110101111000100110101111000100110101111000100110101111

10011010111100010011010111100010
01101011110001001101011110001001
10101111000100110101111

Length (original seed): 87

Weight: 48

Total number of rows: 3

Number of rows: 3

Indices of rows (new: original):
0: 1
1: 2
2: 0

01101011110001001101011110001001
10101111000100110101111000000000
10011010111100010011010111100010

Number of variables (gaps/ones): 22

Positions of gaps:
1: 0
2: 3
3: 5
4: 10
5: 11
6: 12
7: 14
8: 15
9: 18
10: 20
11: 25
12: 26
13: 27
14: 29
15: 30
16: 33
17: 35
18: 40
19: 41
20: 42
21: 44
22: 45

Positions of ones:
1: 49
2: 51
3: 52
4: 53
5: 54
6: 64
7: 67
8: 68
9: 70
10: 72
11: 73
12: 74
13: 75
14: 79
15: 82
16: 83
17: 85
18: 87
19: 88
20: 89
21: 90
22: 94

Original matrix


 Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21	One                   	Gap                   
-----------------------------------------------------------------------------------------------------------------
   0 |   0   1  22   1 |    4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000100000000000000000	1000000000000000000000
   1 |   0   1  21   1 |    3   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0001000000000000000000	1000000000000000000000
   2 |   0   1  20   1 |    2   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0010000000000000000000	1000000000000000000000
   3 |   0   1  19   2 |    1   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0100100000000000000000	1100000000000000000000
   4 |   0   1  18   1 |    _   3   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0001000000000000000000	0100000000000000000000
   5 |   0   1  17   3 |    0   2   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	1010100000000000000000	1110000000000000000000
   6 |   0   1  16   2 |    _   1   3   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0101000000000000000000	0110000000000000000000
   7 |   0   1  15   1 |    _   _   2   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0010000000000000000000	0010000000000000000000
   8 |   0   1  14   2 |    _   0   1   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	1100000000000000000000	0110000000000000000000
   9 |   0   1  12   2 |    _   _   0   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	1000100000000000000000	0011000000000000000000
  10 |   0   1  11   2 |    _   _   _   3   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0001100000000000000000	0001100000000000000000
  11 |   0   1  10   3 |    _   _   _   2   3   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0011100000000000000000	0001110000000000000000
  12 |   0   1   9   3 |    _   _   _   1   2   3   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0111000000000000000000	0001110000000000000000
  13 |   0   1   8   3 |    _   _   _   _   1   2   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0110100000000000000000	0000111000000000000000
  14 |   0   1   7   4 |    _   _   _   0   _   1   3   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _	1101100000000000000000	0001011100000000000000
  15 |   0   1   6   3 |    _   _   _   _   0   _   2   3   _   _   _   _   _   _   _   _   _   _   _   _   _   _	1011000000000000000000	0000101100000000000000
  16 |   0   1   5   3 |    _   _   _   _   _   0   1   2   _   _   _   _   _   _   _   _   _   _   _   _   _   _	1110000000000000000000	0000011100000000000000
  17 |   0   1   4   2 |    _   _   _   _   _   _   _   1   4   _   _   _   _   _   _   _   _   _   _   _   _   _	0100100000000000000000	0000000110000000000000
  18 |   0   1   3   2 |    _   _   _   _   _   _   0   _   3   _   _   _   _   _   _   _   _   _   _   _   _   _	1001000000000000000000	0000001010000000000000
  19 |   0   1   2   3 |    _   _   _   _   _   _   _   0   2   4   _   _   _   _   _   _   _   _   _   _   _   _	1010100000000000000000	0000000111000000000000
  20 |   0   1   1   2 |    _   _   _   _   _   _   _   _   1   3   _   _   _   _   _   _   _   _   _   _   _   _	0101000000000000000000	0000000011000000000000
  21 |   0   1   0   1 |    _   _   _   _   _   _   _   _   _   2   _   _   _   _   _   _   _   _   _   _   _   _	0010000000000000000000	0000000001000000000000
  22 |   0   1  -1   2 |    _   _   _   _   _   _   _   _   0   1   _   _   _   _   _   _   _   _   _   _   _   _	1100000000000000000000	0000000011000000000000
  23 |   0   1  -3   2 |    _   _   _   _   _   _   _   _   _   0   4   _   _   _   _   _   _   _   _   _   _   _	1000100000000000000000	0000000001100000000000
  24 |   0   1  -4   2 |    _   _   _   _   _   _   _   _   _   _   3   4   _   _   _   _   _   _   _   _   _   _	0001100000000000000000	0000000000110000000000
  25 |   0   1  -5   3 |    _   _   _   _   _   _   _   _   _   _   2   3   4   _   _   _   _   _   _   _   _   _	0011100000000000000000	0000000000111000000000
  26 |   0   1  -6   3 |    _   _   _   _   _   _   _   _   _   _   1   2   3   _   _   _   _   _   _   _   _   _	0111000000000000000000	0000000000111000000000
  27 |   0   1  -7   3 |    _   _   _   _   _   _   _   _   _   _   _   1   2   4   _   _   _   _   _   _   _   _	0110100000000000000000	0000000000011100000000
  28 |   0   1  -8   4 |    _   _   _   _   _   _   _   _   _   _   0   _   1   3   4   _   _   _   _   _   _   _	1101100000000000000000	0000000000101110000000
  29 |   0   1  -9   3 |    _   _   _   _   _   _   _   _   _   _   _   0   _   2   3   _   _   _   _   _   _   _	1011000000000000000000	0000000000010110000000
  30 |   0   1 -10   3 |    _   _   _   _   _   _   _   _   _   _   _   _   0   1   2   _   _   _   _   _   _   _	1110000000000000000000	0000000000001110000000
  31 |   0   1 -11   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   1   _   _   _   _   _   _   _	0100000000000000000000	0000000000000010000000
  32 |   0   1 -12   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   _   _   _   _   _   _   _	1000000000000000000000	0000000000000100000000
  33 |   0   1 -13   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   _   _   _   _   _   _	1000000000000000000000	0000000000000010000000
  34 |   0   2  30   1 |   21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000000001	1000000000000000000000
  35 |   0   2  27   1 |    _  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000000001	0100000000000000000000
  36 |   0   2  26   1 |   20   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000000010	1000000000000000000000
  37 |   0   2  25   2 |   19   _  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000000101	1010000000000000000000
  38 |   0   2  24   1 |   18   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000001000	1000000000000000000000
  39 |   0   2  23   2 |   17  20   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000010010	1100000000000000000000
  40 |   0   2  22   1 |    _  19   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000000100	0100000000000000000000
  41 |   0   2  21   3 |   16  18  20   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000101010	1110000000000000000000
  42 |   0   2  20   3 |    _  17  19  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000010101	0111000000000000000000
  43 |   0   2  19   3 |   15   _  18   _  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000001001001	1010100000000000000000
  44 |   0   2  18   4 |   14  16  17   _   _  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000010110001	1110010000000000000000
  45 |   0   2  16   4 |    _  15  16  20   _   _  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000001100011	0111001000000000000000
  46 |   0   2  15   5 |   13  14   _  19  20   _   _  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000110000111	1101100100000000000000
  47 |   0   2  14   4 |    _   _  15  18  19  20   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000001001110	0011110000000000000000
  48 |   0   2  13   4 |    _   _  14  17  18  19   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000010011100	0011110000000000000000
  49 |   0   2  12   5 |    _  13   _   _  17  18  20   _  21   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000100011011	0100111010000000000000
  50 |   0   2  11   5 |   12   _   _  16   _  17  19  20   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000001000110110	1001011100000000000000
  51 |   0   2  10   6 |   11   _  13   _  16   _  18  19   _  21   _   _   _   _   _   _   _   _   _   _   _   _	0000000000010100101101	1010101101000000000000
  52 |   0   2   9   5 |   10   _   _  15   _  16  17  18   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000100001111000	1001011100000000000000
  53 |   0   2   8   6 |    9  12   _  14  15   _   _  17  20   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000001001011010010	1101100110000000000000
  54 |   0   2   7   5 |    _  11   _   _  14  15  16   _  19   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000010011100100	0100111010000000000000
  55 |   0   2   6   7 |    8  10  12   _   _  14   _  16  18  20   _   _   _   _   _   _   _   _   _   _   _   _	0000000010101010101010	1110010111000000000000
  56 |   0   2   5   7 |    _   9  11  13   _   _  15   _  17  19  21   _   _   _   _   _   _   _   _   _   _   _	0000000001010101010101	0111001011100000000000
  57 |   0   2   4   7 |    7   _  10   _  13   _  14  15   _  18   _  21   _   _   _   _   _   _   _   _   _   _	0000000100100111001001	1010101101010000000000
  58 |   0   2   3   8 |    6   8   9   _   _  13   _  14  16  17   _   _  21   _   _   _   _   _   _   _   _   _	0000001011000110110001	1110010111001000000000
  59 |   0   2   1   8 |    _   7   8  12   _   _  13   _  15  16  20   _   _  21   _   _   _   _   _   _   _   _	0000000110001101100011	0111001011100100000000
  60 |   0   2   0   9 |    5   6   _  11  12   _   _  13  14   _  19  20   _   _  21   _   _   _   _   _   _   _	0000011000011110000111	1101100110110010000000
  61 |   0   2  -1   8 |    _   _   7  10  11  12   _   _   _  15  18  19  20   _   _   _   _   _   _   _   _   _	0000000100111001001110	0011110001111000000000
  62 |   0   2  -2   8 |    _   _   6   9  10  11   _   _   _  14  17  18  19   _   _   _   _   _   _   _   _   _	0000001001110010011100	0011110001111000000000
  63 |   0   2  -3   8 |    _   5   _   _   9  10  12   _  13   _   _  17  18  20   _   _   _   _   _   _   _   _	0000010001101100011010	0100111010011100000000
  64 |   0   2  -4   8 |    _   _   _   8   _   9  11  12   _   _  16   _  17  19  20   _   _   _   _   _   _   _	0000000011011000110110	0001011100101110000000
  65 |   0   2  -5   8 |    _   _   5   _   8   _  10  11   _  13   _  16   _  18  19   _   _   _   _   _   _   _	0000010010110100101100	0010101101010110000000
  66 |   0   2  -6   8 |    _   _   _   7   _   8   9  10   _   _  15   _  16  17  18   _   _   _   _   _   _   _	0000000111100001111000	0001011100101110000000
  67 |   0   2  -7   7 |    _   _   _   6   7   _   _   9  12   _  14  15   _   _  17   _   _   _   _   _   _   _	0000001101001011010000	0001100110110010000000
  68 |   0   2  -8   7 |    _   _   _   _   6   7   8   _  11   _   _  14  15  16   _   _   _   _   _   _   _   _	0000001110010011100000	0000111010011100000000
  69 |   0   2  -9   6 |    _   _   _   _   _   6   _   8  10  12   _   _  14   _  16   _   _   _   _   _   _   _	0000001010101010100000	0000010111001010000000
  70 |   0   2 -10   6 |    _   _   _   5   _   _   7   _   9  11  13   _   _  15   _   _   _   _   _   _   _   _	0000010101010101000000	0001001011100100000000
  71 |   0   2 -11   7 |    _   _   _   _   5   _   6   7   _  10   _  13   _  14  15   _   _   _   _   _   _   _	0000011100100111000000	0000101101010110000000
  72 |   0   2 -12   6 |    _   _   _   _   _   5   _   6   8   9   _   _  13   _  14   _   _   _   _   _   _   _	0000011011000110000000	0000010111001010000000
  73 |   0   2 -14   5 |    _   _   _   _   _   _   5   _   7   8  12   _   _  13   _   _   _   _   _   _   _   _	0000010110001100000000	0000001011100100000000
  74 |   0   2 -15   5 |    _   _   _   _   _   _   _   5   6   _  11  12   _   _  13   _   _   _   _   _   _   _	0000011000011100000000	0000000110110010000000
  75 |   0   2 -16   4 |    _   _   _   _   _   _   _   _   _   7  10  11  12   _   _   _   _   _   _   _   _   _	0000000100111000000000	0000000001111000000000
  76 |   0   2 -17   4 |    _   _   _   _   _   _   _   _   _   6   9  10  11   _   _   _   _   _   _   _   _   _	0000001001110000000000	0000000001111000000000
  77 |   0   2 -18   4 |    _   _   _   _   _   _   _   _   5   _   _   9  10  12   _   _   _   _   _   _   _   _	0000010001101000000000	0000000010011100000000
  78 |   0   2 -19   4 |    _   _   _   _   _   _   _   _   _   _   8   _   9  11  12   _   _   _   _   _   _   _	0000000011011000000000	0000000000101110000000
  79 |   0   2 -20   4 |    _   _   _   _   _   _   _   _   _   5   _   8   _  10  11   _   _   _   _   _   _   _	0000010010110000000000	0000000001010110000000
  80 |   0   2 -21   4 |    _   _   _   _   _   _   _   _   _   _   7   _   8   9  10   _   _   _   _   _   _   _	0000000111100000000000	0000000000101110000000
  81 |   0   2 -22   3 |    _   _   _   _   _   _   _   _   _   _   6   7   _   _   9   _   _   _   _   _   _   _	0000001101000000000000	0000000000110010000000
  82 |   0   2 -23   3 |    _   _   _   _   _   _   _   _   _   _   _   6   7   8   _   _   _   _   _   _   _   _	0000001110000000000000	0000000000011100000000
  83 |   0   2 -24   2 |    _   _   _   _   _   _   _   _   _   _   _   _   6   _   8   _   _   _   _   _   _   _	0000001010000000000000	0000000000001010000000
  84 |   0   2 -25   2 |    _   _   _   _   _   _   _   _   _   _   5   _   _   7   _   _   _   _   _   _   _   _	0000010100000000000000	0000000000100100000000
  85 |   0   2 -26   3 |    _   _   _   _   _   _   _   _   _   _   _   5   _   6   7   _   _   _   _   _   _   _	0000011100000000000000	0000000000010110000000
  86 |   0   2 -27   2 |    _   _   _   _   _   _   _   _   _   _   _   _   5   _   6   _   _   _   _   _   _   _	0000011000000000000000	0000000000001010000000
  87 |   0   2 -29   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   _   _   _   _   _   _   _	0000010000000000000000	0000000000000100000000
  88 |   0   2 -30   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   _   _   _   _   _   _	0000010000000000000000	0000000000000010000000
  89 |   1   1  21   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   4   _   _   _   _   _   _	0000100000000000000000	0000000000000001000000
  90 |   1   1  20   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   3   _   _   _   _   _   _	0001000000000000000000	0000000000000001000000
  91 |   1   1  19   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   4   _   _   _   _   _	0010100000000000000000	0000000000000001100000
  92 |   1   1  18   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   1   3   _   _   _   _   _	0101000000000000000000	0000000000000001100000
  93 |   1   1  17   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   _   _   _   _   _	0010000000000000000000	0000000000000000100000
  94 |   1   1  16   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   _   _   _   _   _	1100000000000000000000	0000000000000001100000
  95 |   1   1  14   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   4   _   _   _   _	1000100000000000000000	0000000000000000110000
  96 |   1   1  13   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   3   4   _   _   _	0001100000000000000000	0000000000000000011000
  97 |   1   1  12   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   3   4   _   _	0011100000000000000000	0000000000000000011100
  98 |   1   1  11   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   1   2   3   _   _	0111000000000000000000	0000000000000000011100
  99 |   1   1  10   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   1   2   4   _	0110100000000000000000	0000000000000000001110
 100 |   1   1   9   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   1   3   4	1101100000000000000000	0000000000000000010111
 101 |   1   1   8   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   2   3	1011000000000000000000	0000000000000000001011
 102 |   1   1   7   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   2	1110000000000000000000	0000000000000000000111
 103 |   1   1   6   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   1	0100000000000000000000	0000000000000000000001
 104 |   1   1   5   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _	1000000000000000000000	0000000000000000000010
 105 |   1   1   4   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0	1000000000000000000000	0000000000000000000001
 106 |   1   2  29   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  21   _   _   _   _   _   _	0000000000000000000001	0000000000000001000000
 107 |   1   2  27   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  21   _   _   _   _   _	0000000000000000000001	0000000000000000100000
 108 |   1   2  25   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  20   _   _   _   _   _   _	0000000000000000000010	0000000000000001000000
 109 |   1   2  24   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  19   _   _   _   _   _   _	0000000000000000000100	0000000000000001000000
 110 |   1   2  23   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  18  20   _   _   _   _   _	0000000000000000001010	0000000000000001100000
 111 |   1   2  22   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  17  19  21   _   _   _   _	0000000000000000010101	0000000000000001110000
 112 |   1   2  21   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  18   _  21   _   _   _	0000000000000000001001	0000000000000000101000
 113 |   1   2  20   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  16  17   _   _  21   _   _	0000000000000000110001	0000000000000001100100
 114 |   1   2  18   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  15  16  20   _   _  21   _	0000000000000001100011	0000000000000001110010
 115 |   1   2  17   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  14   _  19  20   _   _  21	0000000000000010000111	0000000000000001011001
 116 |   1   2  16   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  15  18  19  20   _   _	0000000000000001001110	0000000000000000111100
 117 |   1   2  15   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  14  17  18  19   _   _	0000000000000010011100	0000000000000000111100
 118 |   1   2  14   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  13   _   _  17  18  20   _	0000000000000100011010	0000000000000001001110
 119 |   1   2  13   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  16   _  17  19  20	0000000000000000110110	0000000000000000010111
 120 |   1   2  12   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  13   _  16   _  18  19	0000000000000100101100	0000000000000000101011
 121 |   1   2  11   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  15   _  16  17  18	0000000000000001111000	0000000000000000010111
 122 |   1   2  10   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  12   _  14  15   _   _  17	0000000000001011010000	0000000000000001011001
 123 |   1   2   9   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  11   _   _  14  15  16   _	0000000000010011100000	0000000000000001001110
 124 |   1   2   8   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  10  12   _   _  14   _  16	0000000000101010100000	0000000000000001100101
 125 |   1   2   7   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   9  11  13   _   _  15   _	0000000001010101000000	0000000000000001110010
 126 |   1   2   6   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  10   _  13   _  14  15	0000000000100111000000	0000000000000000101011
 127 |   1   2   5   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   8   9   _   _  13   _  14	0000000011000110000000	0000000000000001100101
 128 |   1   2   3   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   7   8  12   _   _  13   _	0000000110001100000000	0000000000000001110010
 129 |   1   2   2   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   _  11  12   _   _  13	0000001000011100000000	0000000000000001011001
 130 |   1   2   1   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   7  10  11  12   _   _	0000000100111000000000	0000000000000000111100
 131 |   1   2   0   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   9  10  11   _   _	0000001001110000000000	0000000000000000111100
 132 |   1   2  -1   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   _   9  10  12   _	0000010001101000000000	0000000000000001001110
 133 |   1   2  -2   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   8   _   9  11  12	0000000011011000000000	0000000000000000010111
 134 |   1   2  -3   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   8   _  10  11	0000010010110000000000	0000000000000000101011
 135 |   1   2  -4   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   7   _   8   9  10	0000000111100000000000	0000000000000000010111
 136 |   1   2  -5   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   7   _   _   9	0000001101000000000000	0000000000000000011001
 137 |   1   2  -6   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   7   8   _	0000001110000000000000	0000000000000000001110
 138 |   1   2  -7   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   _   8	0000001010000000000000	0000000000000000000101
 139 |   1   2  -8   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   _   7   _	0000010100000000000000	0000000000000000010010
 140 |   1   2  -9   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   6   7	0000011100000000000000	0000000000000000001011
 141 |   1   2 -10   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   6	0000011000000000000000	0000000000000000000101
 142 |   1   2 -12   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _	0000010000000000000000	0000000000000000000010
 143 |   1   2 -13   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5	0000010000000000000000	0000000000000000000001
-----------------------------------------------------------------------------------------------------------------
Sorted matrix


 Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21	One                   	Gap                   
-----------------------------------------------------------------------------------------------------------------
   0 |   0   2   0   9 |    5   6   _  11  12   _   _  13  14   _  19  20   _   _  21   _   _   _   _   _   _   _	0000011000011110000111	1101100110110010000000
   1 |   0   2   3   8 |    6   8   9   _   _  13   _  14  16  17   _   _  21   _   _   _   _   _   _   _   _   _	0000001011000110110001	1110010111001000000000
   2 |   0   2   1   8 |    _   7   8  12   _   _  13   _  15  16  20   _   _  21   _   _   _   _   _   _   _   _	0000000110001101100011	0111001011100100000000
   3 |   0   2  -1   8 |    _   _   7  10  11  12   _   _   _  15  18  19  20   _   _   _   _   _   _   _   _   _	0000000100111001001110	0011110001111000000000
   4 |   0   2  -2   8 |    _   _   6   9  10  11   _   _   _  14  17  18  19   _   _   _   _   _   _   _   _   _	0000001001110010011100	0011110001111000000000
   5 |   0   2  -3   8 |    _   5   _   _   9  10  12   _  13   _   _  17  18  20   _   _   _   _   _   _   _   _	0000010001101100011010	0100111010011100000000
   6 |   0   2  -4   8 |    _   _   _   8   _   9  11  12   _   _  16   _  17  19  20   _   _   _   _   _   _   _	0000000011011000110110	0001011100101110000000
   7 |   0   2  -5   8 |    _   _   5   _   8   _  10  11   _  13   _  16   _  18  19   _   _   _   _   _   _   _	0000010010110100101100	0010101101010110000000
   8 |   0   2  -6   8 |    _   _   _   7   _   8   9  10   _   _  15   _  16  17  18   _   _   _   _   _   _   _	0000000111100001111000	0001011100101110000000
   9 |   0   2   6   7 |    8  10  12   _   _  14   _  16  18  20   _   _   _   _   _   _   _   _   _   _   _   _	0000000010101010101010	1110010111000000000000
  10 |   0   2   5   7 |    _   9  11  13   _   _  15   _  17  19  21   _   _   _   _   _   _   _   _   _   _   _	0000000001010101010101	0111001011100000000000
  11 |   0   2   4   7 |    7   _  10   _  13   _  14  15   _  18   _  21   _   _   _   _   _   _   _   _   _   _	0000000100100111001001	1010101101010000000000
  12 |   0   2  -7   7 |    _   _   _   6   7   _   _   9  12   _  14  15   _   _  17   _   _   _   _   _   _   _	0000001101001011010000	0001100110110010000000
  13 |   0   2  -8   7 |    _   _   _   _   6   7   8   _  11   _   _  14  15  16   _   _   _   _   _   _   _   _	0000001110010011100000	0000111010011100000000
  14 |   0   2 -11   7 |    _   _   _   _   5   _   6   7   _  10   _  13   _  14  15   _   _   _   _   _   _   _	0000011100100111000000	0000101101010110000000
  15 |   0   2  10   6 |   11   _  13   _  16   _  18  19   _  21   _   _   _   _   _   _   _   _   _   _   _   _	0000000000010100101101	1010101101000000000000
  16 |   0   2   8   6 |    9  12   _  14  15   _   _  17  20   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000001001011010010	1101100110000000000000
  17 |   0   2  -9   6 |    _   _   _   _   _   6   _   8  10  12   _   _  14   _  16   _   _   _   _   _   _   _	0000001010101010100000	0000010111001010000000
  18 |   0   2 -10   6 |    _   _   _   5   _   _   7   _   9  11  13   _   _  15   _   _   _   _   _   _   _   _	0000010101010101000000	0001001011100100000000
  19 |   0   2 -12   6 |    _   _   _   _   _   5   _   6   8   9   _   _  13   _  14   _   _   _   _   _   _   _	0000011011000110000000	0000010111001010000000
  20 |   0   2  15   5 |   13  14   _  19  20   _   _  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000110000111	1101100100000000000000
  21 |   0   2  12   5 |    _  13   _   _  17  18  20   _  21   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000100011011	0100111010000000000000
  22 |   0   2  11   5 |   12   _   _  16   _  17  19  20   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000001000110110	1001011100000000000000
  23 |   0   2   9   5 |   10   _   _  15   _  16  17  18   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000100001111000	1001011100000000000000
  24 |   0   2   7   5 |    _  11   _   _  14  15  16   _  19   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000010011100100	0100111010000000000000
  25 |   0   2 -14   5 |    _   _   _   _   _   _   5   _   7   8  12   _   _  13   _   _   _   _   _   _   _   _	0000010110001100000000	0000001011100100000000
  26 |   0   2 -15   5 |    _   _   _   _   _   _   _   5   6   _  11  12   _   _  13   _   _   _   _   _   _   _	0000011000011100000000	0000000110110010000000
  27 |   0   1  -8   4 |    _   _   _   _   _   _   _   _   _   _   0   _   1   3   4   _   _   _   _   _   _   _	1101100000000000000000	0000000000101110000000
  28 |   0   2  18   4 |   14  16  17   _   _  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000010110001	1110010000000000000000
  29 |   0   2  16   4 |    _  15  16  20   _   _  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000001100011	0111001000000000000000
  30 |   0   2  14   4 |    _   _  15  18  19  20   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000001001110	0011110000000000000000
  31 |   0   2  13   4 |    _   _  14  17  18  19   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000010011100	0011110000000000000000
  32 |   0   1   7   4 |    _   _   _   0   _   1   3   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _	1101100000000000000000	0001011100000000000000
  33 |   0   2 -16   4 |    _   _   _   _   _   _   _   _   _   7  10  11  12   _   _   _   _   _   _   _   _   _	0000000100111000000000	0000000001111000000000
  34 |   0   2 -17   4 |    _   _   _   _   _   _   _   _   _   6   9  10  11   _   _   _   _   _   _   _   _   _	0000001001110000000000	0000000001111000000000
  35 |   0   2 -18   4 |    _   _   _   _   _   _   _   _   5   _   _   9  10  12   _   _   _   _   _   _   _   _	0000010001101000000000	0000000010011100000000
  36 |   0   2 -19   4 |    _   _   _   _   _   _   _   _   _   _   8   _   9  11  12   _   _   _   _   _   _   _	0000000011011000000000	0000000000101110000000
  37 |   0   2 -20   4 |    _   _   _   _   _   _   _   _   _   5   _   8   _  10  11   _   _   _   _   _   _   _	0000010010110000000000	0000000001010110000000
  38 |   0   2 -21   4 |    _   _   _   _   _   _   _   _   _   _   7   _   8   9  10   _   _   _   _   _   _   _	0000000111100000000000	0000000000101110000000
  39 |   1   1   9   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   1   3   4	1101100000000000000000	0000000000000000010111
  40 |   1   2  18   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  15  16  20   _   _  21   _	0000000000000001100011	0000000000000001110010
  41 |   1   2  17   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  14   _  19  20   _   _  21	0000000000000010000111	0000000000000001011001
  42 |   1   2  16   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  15  18  19  20   _   _	0000000000000001001110	0000000000000000111100
  43 |   1   2  15   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  14  17  18  19   _   _	0000000000000010011100	0000000000000000111100
  44 |   1   2  14   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  13   _   _  17  18  20   _	0000000000000100011010	0000000000000001001110
  45 |   1   2  13   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  16   _  17  19  20	0000000000000000110110	0000000000000000010111
  46 |   1   2  12   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  13   _  16   _  18  19	0000000000000100101100	0000000000000000101011
  47 |   1   2  11   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  15   _  16  17  18	0000000000000001111000	0000000000000000010111
  48 |   1   2  10   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  12   _  14  15   _   _  17	0000000000001011010000	0000000000000001011001
  49 |   1   2   9   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  11   _   _  14  15  16   _	0000000000010011100000	0000000000000001001110
  50 |   1   2   8   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  10  12   _   _  14   _  16	0000000000101010100000	0000000000000001100101
  51 |   1   2   7   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   9  11  13   _   _  15   _	0000000001010101000000	0000000000000001110010
  52 |   1   2   6   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  10   _  13   _  14  15	0000000000100111000000	0000000000000000101011
  53 |   1   2   5   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   8   9   _   _  13   _  14	0000000011000110000000	0000000000000001100101
  54 |   1   2   3   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   7   8  12   _   _  13   _	0000000110001100000000	0000000000000001110010
  55 |   1   2   2   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   _  11  12   _   _  13	0000001000011100000000	0000000000000001011001
  56 |   1   2   1   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   7  10  11  12   _   _	0000000100111000000000	0000000000000000111100
  57 |   1   2   0   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   9  10  11   _   _	0000001001110000000000	0000000000000000111100
  58 |   1   2  -1   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   _   9  10  12   _	0000010001101000000000	0000000000000001001110
  59 |   1   2  -2   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   8   _   9  11  12	0000000011011000000000	0000000000000000010111
  60 |   1   2  -3   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   8   _  10  11	0000010010110000000000	0000000000000000101011
  61 |   1   2  -4   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   7   _   8   9  10	0000000111100000000000	0000000000000000010111
  62 |   0   1  17   3 |    0   2   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	1010100000000000000000	1110000000000000000000
  63 |   0   1   9   3 |    _   _   _   1   2   3   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0111000000000000000000	0001110000000000000000
  64 |   0   1   8   3 |    _   _   _   _   1   2   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0110100000000000000000	0000111000000000000000
  65 |   0   1   2   3 |    _   _   _   _   _   _   _   0   2   4   _   _   _   _   _   _   _   _   _   _   _   _	1010100000000000000000	0000000111000000000000
  66 |   0   1  -5   3 |    _   _   _   _   _   _   _   _   _   _   2   3   4   _   _   _   _   _   _   _   _   _	0011100000000000000000	0000000000111000000000
  67 |   0   1  -6   3 |    _   _   _   _   _   _   _   _   _   _   1   2   3   _   _   _   _   _   _   _   _   _	0111000000000000000000	0000000000111000000000
  68 |   0   2 -22   3 |    _   _   _   _   _   _   _   _   _   _   6   7   _   _   9   _   _   _   _   _   _   _	0000001101000000000000	0000000000110010000000
  69 |   0   2 -23   3 |    _   _   _   _   _   _   _   _   _   _   _   6   7   8   _   _   _   _   _   _   _   _	0000001110000000000000	0000000000011100000000
  70 |   0   2 -26   3 |    _   _   _   _   _   _   _   _   _   _   _   5   _   6   7   _   _   _   _   _   _   _	0000011100000000000000	0000000000010110000000
  71 |   1   1  12   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   3   4   _   _	0011100000000000000000	0000000000000000011100
  72 |   1   1  11   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   1   2   3   _   _	0111000000000000000000	0000000000000000011100
  73 |   1   1  10   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   1   2   4   _	0110100000000000000000	0000000000000000001110
  74 |   1   1   8   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   2   3	1011000000000000000000	0000000000000000001011
  75 |   1   1   7   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   2	1110000000000000000000	0000000000000000000111
  76 |   1   2  22   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  17  19  21   _   _   _   _	0000000000000000010101	0000000000000001110000
  77 |   1   2  20   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  16  17   _   _  21   _   _	0000000000000000110001	0000000000000001100100
  78 |   0   2  21   3 |   16  18  20   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000101010	1110000000000000000000
  79 |   0   2  20   3 |    _  17  19  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000010101	0111000000000000000000
  80 |   0   2  19   3 |   15   _  18   _  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000001001001	1010100000000000000000
  81 |   0   1  -7   3 |    _   _   _   _   _   _   _   _   _   _   _   1   2   4   _   _   _   _   _   _   _   _	0110100000000000000000	0000000000011100000000
  82 |   0   1  -9   3 |    _   _   _   _   _   _   _   _   _   _   _   0   _   2   3   _   _   _   _   _   _   _	1011000000000000000000	0000000000010110000000
  83 |   0   1 -10   3 |    _   _   _   _   _   _   _   _   _   _   _   _   0   1   2   _   _   _   _   _   _   _	1110000000000000000000	0000000000001110000000
  84 |   0   1   6   3 |    _   _   _   _   0   _   2   3   _   _   _   _   _   _   _   _   _   _   _   _   _   _	1011000000000000000000	0000101100000000000000
  85 |   0   1   5   3 |    _   _   _   _   _   0   1   2   _   _   _   _   _   _   _   _   _   _   _   _   _   _	1110000000000000000000	0000011100000000000000
  86 |   0   1  10   3 |    _   _   _   2   3   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0011100000000000000000	0001110000000000000000
  87 |   1   2  -5   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   7   _   _   9	0000001101000000000000	0000000000000000011001
  88 |   1   2  -6   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   7   8   _	0000001110000000000000	0000000000000000001110
  89 |   1   2  -9   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   6   7	0000011100000000000000	0000000000000000001011
  90 |   1   1  19   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   4   _   _   _   _   _	0010100000000000000000	0000000000000001100000
  91 |   1   1  18   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   1   3   _   _   _   _   _	0101000000000000000000	0000000000000001100000
  92 |   1   1  16   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   _   _   _   _   _	1100000000000000000000	0000000000000001100000
  93 |   1   1  14   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   4   _   _   _   _	1000100000000000000000	0000000000000000110000
  94 |   1   1  13   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   3   4   _   _   _	0001100000000000000000	0000000000000000011000
  95 |   0   1  14   2 |    _   0   1   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	1100000000000000000000	0110000000000000000000
  96 |   0   2  23   2 |   17  20   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000010010	1100000000000000000000
  97 |   1   2  23   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  18  20   _   _   _   _   _	0000000000000000001010	0000000000000001100000
  98 |   1   2  21   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  18   _  21   _   _   _	0000000000000000001001	0000000000000000101000
  99 |   0   2  25   2 |   19   _  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000000101	1010000000000000000000
 100 |   0   1  16   2 |    _   1   3   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0101000000000000000000	0110000000000000000000
 101 |   0   1   4   2 |    _   _   _   _   _   _   _   1   4   _   _   _   _   _   _   _   _   _   _   _   _   _	0100100000000000000000	0000000110000000000000
 102 |   0   1   1   2 |    _   _   _   _   _   _   _   _   1   3   _   _   _   _   _   _   _   _   _   _   _   _	0101000000000000000000	0000000011000000000000
 103 |   0   2 -24   2 |    _   _   _   _   _   _   _   _   _   _   _   _   6   _   8   _   _   _   _   _   _   _	0000001010000000000000	0000000000001010000000
 104 |   0   1  -1   2 |    _   _   _   _   _   _   _   _   0   1   _   _   _   _   _   _   _   _   _   _   _   _	1100000000000000000000	0000000011000000000000
 105 |   0   2 -25   2 |    _   _   _   _   _   _   _   _   _   _   5   _   _   7   _   _   _   _   _   _   _   _	0000010100000000000000	0000000000100100000000
 106 |   0   1  -3   2 |    _   _   _   _   _   _   _   _   _   0   4   _   _   _   _   _   _   _   _   _   _   _	1000100000000000000000	0000000001100000000000
 107 |   0   1   3   2 |    _   _   _   _   _   _   0   _   3   _   _   _   _   _   _   _   _   _   _   _   _   _	1001000000000000000000	0000001010000000000000
 108 |   0   1  -4   2 |    _   _   _   _   _   _   _   _   _   _   3   4   _   _   _   _   _   _   _   _   _   _	0001100000000000000000	0000000000110000000000
 109 |   0   1  12   2 |    _   _   0   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	1000100000000000000000	0011000000000000000000
 110 |   0   1  11   2 |    _   _   _   3   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0001100000000000000000	0001100000000000000000
 111 |   0   2 -27   2 |    _   _   _   _   _   _   _   _   _   _   _   _   5   _   6   _   _   _   _   _   _   _	0000011000000000000000	0000000000001010000000
 112 |   0   1  19   2 |    1   4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0100100000000000000000	1100000000000000000000
 113 |   1   2  -7   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   _   8	0000001010000000000000	0000000000000000000101
 114 |   1   2  -8   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   _   7   _	0000010100000000000000	0000000000000000010010
 115 |   1   2 -10   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   6	0000011000000000000000	0000000000000000000101
 116 |   1   1  17   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   _   _   _   _   _	0010000000000000000000	0000000000000000100000
 117 |   0   2  24   1 |   18   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000001000	1000000000000000000000
 118 |   1   1  20   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   3   _   _   _   _   _   _	0001000000000000000000	0000000000000001000000
 119 |   0   1  18   1 |    _   3   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0001000000000000000000	0100000000000000000000
 120 |   0   1 -13   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   _   _   _   _   _   _	1000000000000000000000	0000000000000010000000
 121 |   1   1   6   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   1	0100000000000000000000	0000000000000000000001
 122 |   0   1 -11   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   1   _   _   _   _   _   _   _	0100000000000000000000	0000000000000010000000
 123 |   0   1   0   1 |    _   _   _   _   _   _   _   _   _   2   _   _   _   _   _   _   _   _   _   _   _   _	0010000000000000000000	0000000001000000000000
 124 |   1   1   5   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _	1000000000000000000000	0000000000000000000010
 125 |   1   1   4   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0	1000000000000000000000	0000000000000000000001
 126 |   1   2  29   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  21   _   _   _   _   _   _	0000000000000000000001	0000000000000001000000
 127 |   1   2  27   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  21   _   _   _   _   _	0000000000000000000001	0000000000000000100000
 128 |   1   2  25   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  20   _   _   _   _   _   _	0000000000000000000010	0000000000000001000000
 129 |   1   2  24   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  19   _   _   _   _   _   _	0000000000000000000100	0000000000000001000000
 130 |   0   1 -12   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   _   _   _   _   _   _   _	1000000000000000000000	0000000000000100000000
 131 |   0   2  30   1 |   21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000000001	1000000000000000000000
 132 |   0   1  21   1 |    3   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0001000000000000000000	1000000000000000000000
 133 |   0   1  20   1 |    2   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0010000000000000000000	1000000000000000000000
 134 |   0   1  22   1 |    4   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000100000000000000000	1000000000000000000000
 135 |   0   1  15   1 |    _   _   2   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0010000000000000000000	0010000000000000000000
 136 |   0   2 -29   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   _   _   _   _   _   _   _	0000010000000000000000	0000000000000100000000
 137 |   0   2 -30   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   _   _   _   _   _   _	0000010000000000000000	0000000000000010000000
 138 |   0   2  27   1 |    _  21   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000000001	0100000000000000000000
 139 |   0   2  22   1 |    _  19   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000000100	0100000000000000000000
 140 |   1   1  21   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   4   _   _   _   _   _   _	0000100000000000000000	0000000000000001000000
 141 |   0   2  26   1 |   20   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _	0000000000000000000010	1000000000000000000000
 142 |   1   2 -12   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _	0000010000000000000000	0000000000000000000010
 143 |   1   2 -13   1 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5	0000010000000000000000	0000000000000000000001
-----------------------------------------------------------------------------------------------------------------

===========================================================================

Solution: 1

Original submatrix

 # |  Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------------------------------------
 0 |    0 |   0   2   0   9 |    5   6   _  11  12   _   _  13  14   _  19  20   _   _  21   _   _   _   _   _   _   _
 1 |    1 |   0   2   3   8 |    6   8   9   _   _  13   _  14  16  17   _   _  21   _   _   _   _   _   _   _   _   _
 2 |   14 |   0   2 -11   7 |    _   _   _   _   5   _   6   7   _  10   _  13   _  14  15   _   _   _   _   _   _   _
 3 |   47 |   1   2  11   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  15   _  16  17  18
 4 |   71 |   1   1  12   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   3   4   _   _
 5 |   92 |   1   1  16   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   _   _   _   _   _
----------------------------------------------------------------------------------------------------------------------

Submatrix after correction

   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------
   5   _   _  11  12   _   _   _   _   _  19  20   _   _   _   _   _   _   _   _   _   _
   _   8   9   _   _  13   _   _  16   _   _   _  21   _   _   _   _   _   _   _   _   _
   _   _   _   _   _   _   6   7   _  10   _   _   _  14  15   _   _   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  17  18
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   3   4   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   _   _   _   _   _
----------------------------------------------------------------------------------------

Seed (before)

0AA0A0AAAA000A00AA0A0AAAA000A00A
B0B0BBBB000B00BB0H0HGGG000000000
C00EE0D0DECC000D00EE0D0FFCC000D
Seed (after)

CAADADAAAACCDAEEAADAEAAAACCDAEEA
BHBHBBBBGGGBFFBB

Processing scheme

Output row #0
Input row #  0                               0AA0A0AAAA000A00AA0A0AAAA000A00A
Input row #  2                               C000000000CC0000000000000CC00000
Input row #  2                            000000D0D000000D00000D00000000D0
Input row #  2                                          000EE0000E00000000EE000000000000

Output row #1
Input row #  1                               B0B0BBBB000B00BB0000000000000000
Input row #  2                    00000000000000000000000FF0000000
Input row #  1                   00000000000000000000GGG000000000
Input row #  1               00000000000000000H0H000000000000

SIMD function

void compactSeed(__m128i *vmIn, __m128i *vmOut){
	vmOut[0] = _mm_and_si128(vmIn[1], _mm_set1_epi32(0x91eb23d6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_and_si128(vmIn[0], _mm_set1_epi32(0x06000c01)));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x40208140)), 3));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x000c0218)), 11));
	vmOut[1] = _mm_and_si128(vmIn[2], _mm_set1_epi32(0x0000c8f5));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x01800000)), 11));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x00700000)), 12));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x000a0000)), 16));
}


===========================================================================

Solution: 2

Original submatrix

 # |  Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------------------------------------
 0 |    0 |   0   2   0   9 |    5   6   _  11  12   _   _  13  14   _  19  20   _   _  21   _   _   _   _   _   _   _
 1 |    3 |   0   2  -1   8 |    _   _   7  10  11  12   _   _   _  15  18  19  20   _   _   _   _   _   _   _   _   _
 2 |    8 |   0   2  -6   8 |    _   _   _   7   _   8   9  10   _   _  15   _  16  17  18   _   _   _   _   _   _   _
 3 |   39 |   1   1   9   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   1   3   4
 4 |   46 |   1   2  12   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  13   _  16   _  18  19
 5 |   90 |   1   1  19   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   4   _   _   _   _   _
----------------------------------------------------------------------------------------------------------------------

Submatrix after correction

   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------
   5   6   _  11  12   _   _   _  14   _   _   _   _   _  21   _   _   _   _   _   _   _
   _   _   7   _   _   _   _   _   _  15  18  19  20   _   _   _   _   _   _   _   _   _
   _   _   _   _   _   8   9  10   _   _   _   _   _  17   _   _   _   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   1   3   4
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  13   _  16   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   _   _   _   _   _   _
----------------------------------------------------------------------------------------

Seed (before)

0AA0A0AAAA000A00AA0A0AAAA000A00A
B0B0BBBB000B00BB0F0FHFF000000000
C00CD0E0EECC000G00CD0G0EDDD000C
Seed (after)

CAACADAAAACCEAEEAACADAAAADDDAECA
BHBGBBBBFGFBFFBB

Processing scheme

Output row #0
Input row #  0                               0AA0A0AAAA000A00AA0A0AAAA000A00A
Input row #  2                               C00C000000CC000000C00000000000C0
Input row #  2                                0000D00000000000000D0000DDD00000
Input row #  2                                     000000E0EE0000000000000E00000000

Output row #1
Input row #  1                               B0B0BBBB000B00BB0000000000000000
Input row #  1                      00000000000000000F0F0FF000000000
Input row #  2                   000000000000000G00000G0000000000
Input row #  1            00000000000000000000H00000000000

SIMD function

void compactSeed(__m128i *vmIn, __m128i *vmOut){
	vmOut[0] = _mm_and_si128(vmIn[1], _mm_set1_epi32(0x91eb23d6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_and_si128(vmIn[0], _mm_set1_epi32(0x40040c09)));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x07080010)), 1));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x00800340)), 6));
	vmOut[1] = _mm_and_si128(vmIn[2], _mm_set1_epi32(0x0000c8f5));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x006a0000)), 9));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x00208000)), 12));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x00100000)), 19));
}


===========================================================================

Solution: 3

Original submatrix

 # |  Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------------------------------------
 0 |    0 |   0   2   0   9 |    5   6   _  11  12   _   _  13  14   _  19  20   _   _  21   _   _   _   _   _   _   _
 1 |    8 |   0   2  -6   8 |    _   _   _   7   _   8   9  10   _   _  15   _  16  17  18   _   _   _   _   _   _   _
 2 |   10 |   0   2   5   7 |    _   9  11  13   _   _  15   _  17  19  21   _   _   _   _   _   _   _   _   _   _   _
 3 |   39 |   1   1   9   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   1   3   4
 4 |   52 |   1   2   6   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  10   _  13   _  14  15
 5 |   90 |   1   1  19   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   4   _   _   _   _   _
----------------------------------------------------------------------------------------------------------------------

Submatrix after correction

   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------
   5   6   _   _  12   _   _   _  14   _   _  20   _   _   _   _   _   _   _   _   _   _
   _   _   _   7   _   8   9  10   _   _   _   _  16  17  18   _   _   _   _   _   _   _
   _   _  11   _   _   _   _   _   _  19  21   _   _   _   _   _   _   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   1   3   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  13   _   _  15
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   4   _   _   _   _   _
----------------------------------------------------------------------------------------

Seed (before)

0AA0A0AAAA000A00AA0A0AAAA000A00A
B0B0BBBB000B00BB0F0FHFH000000000
C00CD0D0DDEC000G00CG0D0DDEC000E
Seed (after)

CAACAEAAAADCDADDAACAEAAAAECDADDA
BHBHBBBBFGFBFGBB

Processing scheme

Output row #0
Input row #  0                               0AA0A0AAAA000A00AA0A0AAAA000A00A
Input row #  2                               C00C0000000C000000C0000000C00000
Input row #  2                                     0000D0D0DD00000000000D0DD0000000
Input row #  2                          0000000000E00000000000000E0000E0

Output row #1
Input row #  1                               B0B0BBBB000B00BB0000000000000000
Input row #  1                      00000000000000000F0F0F0000000000
Input row #  2                         000000000000000G000G000000000000
Input row #  1            00000000000000000000H0H000000000

SIMD function

void compactSeed(__m128i *vmIn, __m128i *vmOut){
	vmOut[0] = _mm_and_si128(vmIn[1], _mm_set1_epi32(0x91eb23d6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_and_si128(vmIn[0], _mm_set1_epi32(0x04040809)));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x01a00350)), 6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x42000400)), 5));
	vmOut[1] = _mm_and_si128(vmIn[2], _mm_set1_epi32(0x0000c8f5));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x002a0000)), 9));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x00088000)), 6));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x00500000)), 19));
}


===========================================================================

Solution: 4

Original submatrix

 # |  Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------------------------------------
 0 |    0 |   0   2   0   9 |    5   6   _  11  12   _   _  13  14   _  19  20   _   _  21   _   _   _   _   _   _   _
 1 |    8 |   0   2  -6   8 |    _   _   _   7   _   8   9  10   _   _  15   _  16  17  18   _   _   _   _   _   _   _
 2 |   10 |   0   2   5   7 |    _   9  11  13   _   _  15   _  17  19  21   _   _   _   _   _   _   _   _   _   _   _
 3 |   39 |   1   1   9   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   1   3   4
 4 |   57 |   1   2   0   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   9  10  11   _   _
 5 |   90 |   1   1  19   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   4   _   _   _   _   _
----------------------------------------------------------------------------------------------------------------------

Submatrix after correction

   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------
   5   _   _   _  12   _   _  13  14   _   _  20   _   _   _   _   _   _   _   _   _   _
   _   _   _   7   _   8   _   _   _   _   _   _  16  17  18   _   _   _   _   _   _   _
   _   9  11   _   _   _  15   _   _  19  21   _   _   _   _   _   _   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   1   3   4
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   _  10   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   _   _   _   _   _   _
----------------------------------------------------------------------------------------

Seed (before)

0AA0A0AAAA000A00AA0A0AAAA000A00A
B0B0BBBB000B00BB0F0FHFF000000000
C00GD0D0EGEC000C00CE0D0DDEC000E
Seed (after)

CAAEAEAAAADCDAECAACAEAAAAECDADDA
BHBGBBBBFGFBFFBB

Processing scheme

Output row #0
Input row #  0                               0AA0A0AAAA000A00AA0A0AAAA000A00A
Input row #  2                               C0000000000C000C00C0000000C00000
Input row #  2                                     0000D0D00000000000000D0DD0000000
Input row #  2                          00000000E0E00000000E00000E0000E0

Output row #1
Input row #  1                               B0B0BBBB000B00BB0000000000000000
Input row #  1                      00000000000000000F0F0FF000000000
Input row #  2                               000G00000G0000000000000000000000
Input row #  1            00000000000000000000H00000000000

SIMD function

void compactSeed(__m128i *vmIn, __m128i *vmOut){
	vmOut[0] = _mm_and_si128(vmIn[1], _mm_set1_epi32(0x91eb23d6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_and_si128(vmIn[0], _mm_set1_epi32(0x04048801)));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x01a00050)), 6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x42080500)), 5));
	vmOut[1] = _mm_and_si128(vmIn[2], _mm_set1_epi32(0x0000c8f5));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x006a0000)), 9));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_and_si128(vmIn[0], _mm_set1_epi32(0x00000208)));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x00100000)), 19));
}


===========================================================================

Solution: 5

Original submatrix

 # |  Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------------------------------------
 0 |    0 |   0   2   0   9 |    5   6   _  11  12   _   _  13  14   _  19  20   _   _  21   _   _   _   _   _   _   _
 1 |    8 |   0   2  -6   8 |    _   _   _   7   _   8   9  10   _   _  15   _  16  17  18   _   _   _   _   _   _   _
 2 |   10 |   0   2   5   7 |    _   9  11  13   _   _  15   _  17  19  21   _   _   _   _   _   _   _   _   _   _   _
 3 |   39 |   1   1   9   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   1   3   4
 4 |   87 |   1   2  -5   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   7   _   _   9
 5 |   90 |   1   1  19   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   4   _   _   _   _   _
----------------------------------------------------------------------------------------------------------------------

Submatrix after correction

   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------
   5   6   _   _  12   _   _   _  14   _   _  20   _   _   _   _   _   _   _   _   _   _
   _   _   _   _   _   8   _  10   _   _   _   _  16  17  18   _   _   _   _   _   _   _
   _   _  11  13   _   _  15   _   _  19  21   _   _   _   _   _   _   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   1   3   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   7   _   _   9
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   4   _   _   _   _   _
----------------------------------------------------------------------------------------

Seed (before)

0AA0A0AAAA000A00AA0A0AAAA000A00A
B0B0BBBB000B00BB0F0FHFH000000000
C00CG0D0GDEC000E00CE0D0DDEC000E
Seed (after)

CAACAEAAAAECDAEDAACAEAAAAECDADDA
BHBHBBBBFGFBFGBB

Processing scheme

Output row #0
Input row #  0                               0AA0A0AAAA000A00AA0A0AAAA000A00A
Input row #  2                               C00C0000000C000000C0000000C00000
Input row #  2                                     000000D00D00000000000D0DD0000000
Input row #  2                          0000000000E0000E000E00000E0000E0

Output row #1
Input row #  1                               B0B0BBBB000B00BB0000000000000000
Input row #  1                      00000000000000000F0F0F0000000000
Input row #  2                                    0000G000G00000000000000000000000
Input row #  1            00000000000000000000H0H000000000

SIMD function

void compactSeed(__m128i *vmIn, __m128i *vmOut){
	vmOut[0] = _mm_and_si128(vmIn[1], _mm_set1_epi32(0x91eb23d6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_and_si128(vmIn[0], _mm_set1_epi32(0x04040809)));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x01a00240)), 6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x42088400)), 5));
	vmOut[1] = _mm_and_si128(vmIn[2], _mm_set1_epi32(0x0000c8f5));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x002a0000)), 9));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x00000110)), 5));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x00500000)), 19));
}


===========================================================================

Solution: 6

Original submatrix

 # |  Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------------------------------------
 0 |    0 |   0   2   0   9 |    5   6   _  11  12   _   _  13  14   _  19  20   _   _  21   _   _   _   _   _   _   _
 1 |    8 |   0   2  -6   8 |    _   _   _   7   _   8   9  10   _   _  15   _  16  17  18   _   _   _   _   _   _   _
 2 |   10 |   0   2   5   7 |    _   9  11  13   _   _  15   _  17  19  21   _   _   _   _   _   _   _   _   _   _   _
 3 |   61 |   1   2  -4   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   7   _   8   9  10
 4 |   71 |   1   1  12   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   3   4   _   _
 5 |   92 |   1   1  16   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   _   _   _   _   _
----------------------------------------------------------------------------------------------------------------------

Submatrix after correction

   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------
   5   6   _   _  12   _   _  13  14   _   _  20   _   _   _   _   _   _   _   _   _   _
   _   _   _   7   _   8   _   _   _   _   _   _  16  17  18   _   _   _   _   _   _   _
   _   _  11   _   _   _  15   _   _  19  21   _   _   _   _   _   _   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   9  10
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   3   4   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   _   _   _   _   _
----------------------------------------------------------------------------------------

Seed (before)

0AA0A0AAAA000A00AA0A0AAAA000A00A
B0B0BBBB000B00BB0H0HGGG000000000
C00CD0D0FFEC000C00CE0D0DDEC000E
Seed (after)

CAACAEAAAADCDAECAACAEAAAAECDADDA
BHBHBBBBGGGBFFBB

Processing scheme

Output row #0
Input row #  0                               0AA0A0AAAA000A00AA0A0AAAA000A00A
Input row #  2                               C00C0000000C000C00C0000000C00000
Input row #  2                                     0000D0D00000000000000D0DD0000000
Input row #  2                          0000000000E00000000E00000E0000E0

Output row #1
Input row #  1                               B0B0BBBB000B00BB0000000000000000
Input row #  2                                   00000000FF0000000000000000000000
Input row #  1                   00000000000000000000GGG000000000
Input row #  1               00000000000000000H0H000000000000

SIMD function

void compactSeed(__m128i *vmIn, __m128i *vmOut){
	vmOut[0] = _mm_and_si128(vmIn[1], _mm_set1_epi32(0x91eb23d6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_and_si128(vmIn[0], _mm_set1_epi32(0x04048809)));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x01a00050)), 6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x42080400)), 5));
	vmOut[1] = _mm_and_si128(vmIn[2], _mm_set1_epi32(0x0000c8f5));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x00000300)), 4));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x00700000)), 12));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x000a0000)), 16));
}


===========================================================================

Solution: 7

Original submatrix

 # |  Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------------------------------------
 0 |    0 |   0   2   0   9 |    5   6   _  11  12   _   _  13  14   _  19  20   _   _  21   _   _   _   _   _   _   _
 1 |    8 |   0   2  -6   8 |    _   _   _   7   _   8   9  10   _   _  15   _  16  17  18   _   _   _   _   _   _   _
 2 |   10 |   0   2   5   7 |    _   9  11  13   _   _  15   _  17  19  21   _   _   _   _   _   _   _   _   _   _   _
 3 |   71 |   1   1  12   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   3   4   _   _
 4 |   89 |   1   2  -9   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   6   7
 5 |   92 |   1   1  16   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   _   _   _   _   _
----------------------------------------------------------------------------------------------------------------------

Submatrix after correction

   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------
   5   _   _   _  12   _   _   _  14   _   _  20   _   _   _   _   _   _   _   _   _   _
   _   _   _   _   _   8   _  10   _   _   _   _  16  17  18   _   _   _   _   _   _   _
   _   9  11  13   _   _  15   _   _  19  21   _   _   _   _   _   _   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   3   4   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   6   7
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   _   _   _   _   _
----------------------------------------------------------------------------------------

Seed (before)

0AA0A0AAAA000A00AA0A0AAAA000A00A
B0B0BBBB000B00BB0H0HFFF000000000
C00GG0D0EDEC000E00CE0D0DDEC000E
Seed (after)

CAAEAEAAAAECDAEDAACAEAAAAECDADDA
BHBHBBBBFFFBGGBB

Processing scheme

Output row #0
Input row #  0                               0AA0A0AAAA000A00AA0A0AAAA000A00A
Input row #  2                               C0000000000C000000C0000000C00000
Input row #  2                                     000000D00D00000000000D0DD0000000
Input row #  2                          00000000E0E0000E000E00000E0000E0

Output row #1
Input row #  1                               B0B0BBBB000B00BB0000000000000000
Input row #  1                   00000000000000000000FFF000000000
Input row #  2                                        000GG000000000000000000000000000
Input row #  1               00000000000000000H0H000000000000

SIMD function

void compactSeed(__m128i *vmIn, __m128i *vmOut){
	vmOut[0] = _mm_and_si128(vmIn[1], _mm_set1_epi32(0x91eb23d6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_and_si128(vmIn[0], _mm_set1_epi32(0x04040801)));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x01a00240)), 6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x42088500)), 5));
	vmOut[1] = _mm_and_si128(vmIn[2], _mm_set1_epi32(0x0000c8f5));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x00700000)), 12));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x00000018)), 9));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x000a0000)), 16));
}


===========================================================================

Solution: 8

Original submatrix

 # |  Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------------------------------------
 0 |    0 |   0   2   0   9 |    5   6   _  11  12   _   _  13  14   _  19  20   _   _  21   _   _   _   _   _   _   _
 1 |    8 |   0   2  -6   8 |    _   _   _   7   _   8   9  10   _   _  15   _  16  17  18   _   _   _   _   _   _   _
 2 |   11 |   0   2   4   7 |    7   _  10   _  13   _  14  15   _  18   _  21   _   _   _   _   _   _   _   _   _   _
 3 |   59 |   1   2  -2   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   8   _   9  11  12
 4 |   71 |   1   1  12   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   3   4   _   _
 5 |   92 |   1   1  16   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   _   _   _   _   _
----------------------------------------------------------------------------------------------------------------------

Submatrix after correction

   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------
   5   6   _   _   _   _   _   _  14   _  19  20   _   _  21   _   _   _   _   _   _   _
   _   _   _   7   _   8   9   _   _   _   _   _  16  17   _   _   _   _   _   _   _   _
   _   _  10   _  13   _   _  15   _  18   _   _   _   _   _   _   _   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  11  12
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   3   4   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   _   _   _   _   _
----------------------------------------------------------------------------------------

Seed (before)

0AA0A0AAAA000A00AA0A0AAAA000A00A
B0B0BBBB000B00BB0H0HGGG000000000
C00CD0D0DEFF000E00CE0D0DECC000C
Seed (after)

CAACAEAAAADEDADEAACAEAAAACCDADCA
BHBHBBBBGGGBFFBB

Processing scheme

Output row #0
Input row #  0                               0AA0A0AAAA000A00AA0A0AAAA000A00A
Input row #  2                               C00C00000000000000C000000CC000C0
Input row #  2                                     0000D0D0D000000000000D0D00000000
Input row #  2                           000000000E00000E000E0000E0000000

Output row #1
Input row #  1                               B0B0BBBB000B00BB0000000000000000
Input row #  2                                 0000000000FF00000000000000000000
Input row #  1                   00000000000000000000GGG000000000
Input row #  1               00000000000000000H0H000000000000

SIMD function

void compactSeed(__m128i *vmIn, __m128i *vmOut){
	vmOut[0] = _mm_and_si128(vmIn[1], _mm_set1_epi32(0x91eb23d6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_and_si128(vmIn[0], _mm_set1_epi32(0x46040009)));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x00a00150)), 6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x01088200)), 4));
	vmOut[1] = _mm_and_si128(vmIn[2], _mm_set1_epi32(0x0000c8f5));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x00000c00)), 2));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x00700000)), 12));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x000a0000)), 16));
}


===========================================================================

Solution: 9

Original submatrix

 # |  Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------------------------------------
 0 |    0 |   0   2   0   9 |    5   6   _  11  12   _   _  13  14   _  19  20   _   _  21   _   _   _   _   _   _   _
 1 |    8 |   0   2  -6   8 |    _   _   _   7   _   8   9  10   _   _  15   _  16  17  18   _   _   _   _   _   _   _
 2 |   15 |   0   2  10   6 |   11   _  13   _  16   _  18  19   _  21   _   _   _   _   _   _   _   _   _   _   _   _
 3 |   60 |   1   2  -3   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   5   _   8   _  10  11
 4 |   71 |   1   1  12   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   3   4   _   _
 5 |   92 |   1   1  16   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   _   _   _   _   _
----------------------------------------------------------------------------------------------------------------------

Submatrix after correction

   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------
   5   6   _   _  12   _   _   _  14   _   _  20   _   _   _   _   _   _   _   _   _   _
   _   _   _   7   _   8   9   _   _   _  15   _  16  17  18   _   _   _   _   _   _   _
   _   _  13   _   _   _   _  19   _  21   _   _   _   _   _   _   _   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _  10  11
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   3   4   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   _   _   _   _   _
----------------------------------------------------------------------------------------

Seed (before)

0AA0A0AAAA000A00AA0A0AAAA000A00A
B0B0BBBB000B00BB0H0HGGG000000000
C00CD0D0DFFC000E00CD0D0DDEC000E
Seed (after)

CAACAEAAAADCDADEAACAEAAAADCDADDA
BHBHBBBBGGGBFFBB

Processing scheme

Output row #0
Input row #  0                               0AA0A0AAAA000A00AA0A0AAAA000A00A
Input row #  2                               C00C0000000C000000C0000000C00000
Input row #  2                                     0000D0D0D0000000000D0D0DD0000000
Input row #  2                     000000000000000E000000000E0000E0

Output row #1
Input row #  1                               B0B0BBBB000B00BB0000000000000000
Input row #  2                                  000000000FF000000000000000000000
Input row #  1                   00000000000000000000GGG000000000
Input row #  1               00000000000000000H0H000000000000

SIMD function

void compactSeed(__m128i *vmIn, __m128i *vmOut){
	vmOut[0] = _mm_and_si128(vmIn[1], _mm_set1_epi32(0x91eb23d6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_and_si128(vmIn[0], _mm_set1_epi32(0x04040809)));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x01a80150)), 6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x42008000)), 10));
	vmOut[1] = _mm_and_si128(vmIn[2], _mm_set1_epi32(0x0000c8f5));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x00000600)), 3));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x00700000)), 12));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x000a0000)), 16));
}


===========================================================================

Solution: 10

Original submatrix

 # |  Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------------------------------------
 0 |    1 |   0   2   3   8 |    6   8   9   _   _  13   _  14  16  17   _   _  21   _   _   _   _   _   _   _   _   _
 1 |    2 |   0   2   1   8 |    _   7   8  12   _   _  13   _  15  16  20   _   _  21   _   _   _   _   _   _   _   _
 2 |    7 |   0   2  -5   8 |    _   _   5   _   8   _  10  11   _  13   _  16   _  18  19   _   _   _   _   _   _   _
 3 |   39 |   1   1   9   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   1   3   4
 4 |   51 |   1   2   7   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   9  11  13   _   _  15   _
 5 |   72 |   1   1  11   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   1   2   3   _   _
----------------------------------------------------------------------------------------------------------------------

Submatrix after correction

   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------
   6   _   _   _   _  13   _  14   _  17   _   _  21   _   _   _   _   _   _   _   _   _
   _   7   _  12   _   _   _   _  15   _  20   _   _   _   _   _   _   _   _   _   _   _
   _   _   5   _   8   _  10   _   _   _   _  16   _  18  19   _   _   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   1   3   4
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   9  11   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   2   _   _   _
----------------------------------------------------------------------------------------

Seed (before)

0AA0A0AAAA000A00AA0A0AAAA000A00A
B0B0BBBB000B00BB0F0FHFF000000000
E00CD0E0GEGD000C00CD0E0CEED000C
Seed (after)

CAADAEAAAADECAECAADACAAAADECAEEA
BGBGBBBBFHFBFFBB

Processing scheme

Output row #0
Input row #  0                               0AA0A0AAAA000A00AA0A0AAAA000A00A
Input row #  2                            000C00000000000C00C0000C000000C0
Input row #  2                              0000D000000D0000000D000000D00000
Input row #  2                                    E00000E00E00000000000E00EE000000

Output row #1
Input row #  1                               B0B0BBBB000B00BB0000000000000000
Input row #  1                      00000000000000000F0F0FF000000000
Input row #  2                        00000000G0G000000000000000000000
Input row #  1                    00000000000000000000H00000000000

SIMD function

void compactSeed(__m128i *vmIn, __m128i *vmOut){
	vmOut[0] = _mm_and_si128(vmIn[1], _mm_set1_epi32(0x91eb23d6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x40848008)), 3));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x04080810)), 1));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x03200241)), 5));
	vmOut[1] = _mm_and_si128(vmIn[2], _mm_set1_epi32(0x0000c8f5));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x006a0000)), 9));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x00000500)), 7));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x00100000)), 11));
}


===========================================================================

Solution: 11

Original submatrix

 # |  Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------------------------------------
 0 |    1 |   0   2   3   8 |    6   8   9   _   _  13   _  14  16  17   _   _  21   _   _   _   _   _   _   _   _   _
 1 |    2 |   0   2   1   8 |    _   7   8  12   _   _  13   _  15  16  20   _   _  21   _   _   _   _   _   _   _   _
 2 |    7 |   0   2  -5   8 |    _   _   5   _   8   _  10  11   _  13   _  16   _  18  19   _   _   _   _   _   _   _
 3 |   39 |   1   1   9   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   1   3   4
 4 |   51 |   1   2   7   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   9  11  13   _   _  15   _
 5 |   73 |   1   1  10   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   1   2   4   _
----------------------------------------------------------------------------------------------------------------------

Submatrix after correction

   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------
   6   _   _   _   _  13   _  14   _  17   _   _  21   _   _   _   _   _   _   _   _   _
   _   7   _  12   _   _   _   _  15   _  20   _   _   _   _   _   _   _   _   _   _   _
   _   _   5   _   8   _  10   _   _   _   _  16   _  18  19   _   _   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   _   _   3   4
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   9  11   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   1   2   _   _
----------------------------------------------------------------------------------------

Seed (before)

0AA0A0AAAA000A00AA0A0AAAA000A00A
B0B0BBBB000B00BB0F0HHFF000000000
E00CD0E0GEGD000C00CD0E0CEED000C
Seed (after)

CAADAEAAAADECAECAADACAAAADECAEEA
BGBGBBBBFHHBFFBB

Processing scheme

Output row #0
Input row #  0                               0AA0A0AAAA000A00AA0A0AAAA000A00A
Input row #  2                            000C00000000000C00C0000C000000C0
Input row #  2                              0000D000000D0000000D000000D00000
Input row #  2                                    E00000E00E00000000000E00EE000000

Output row #1
Input row #  1                               B0B0BBBB000B00BB0000000000000000
Input row #  1                      00000000000000000F000FF000000000
Input row #  2                        00000000G0G000000000000000000000
Input row #  1                     0000000000000000000HH00000000000

SIMD function

void compactSeed(__m128i *vmIn, __m128i *vmOut){
	vmOut[0] = _mm_and_si128(vmIn[1], _mm_set1_epi32(0x91eb23d6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x40848008)), 3));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x04080810)), 1));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x03200241)), 5));
	vmOut[1] = _mm_and_si128(vmIn[2], _mm_set1_epi32(0x0000c8f5));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x00620000)), 9));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x00000500)), 7));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x00180000)), 10));
}


===========================================================================

Solution: 12

Original submatrix

 # |  Ind | RoG RoO Sft Tot |    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------------------------------------
 0 |    1 |   0   2   3   8 |    6   8   9   _   _  13   _  14  16  17   _   _  21   _   _   _   _   _   _   _   _   _
 1 |    2 |   0   2   1   8 |    _   7   8  12   _   _  13   _  15  16  20   _   _  21   _   _   _   _   _   _   _   _
 2 |    7 |   0   2  -5   8 |    _   _   5   _   8   _  10  11   _  13   _  16   _  18  19   _   _   _   _   _   _   _
 3 |   51 |   1   2   7   4 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   9  11  13   _   _  15   _
 4 |   75 |   1   1   7   3 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   2
 5 |   94 |   1   1  13   2 |    _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   3   4   _   _   _
----------------------------------------------------------------------------------------------------------------------

Submatrix after correction

   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21
----------------------------------------------------------------------------------------
   6   _   _   _   _  13   _  14   _  17   _   _  21   _   _   _   _   _   _   _   _   _
   _   7   _  12   _   _   _   _  15   _  20   _   _   _   _   _   _   _   _   _   _   _
   _   _   5   _   8   _  10   _   _   _   _  16   _  18  19   _   _   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   9  11   _   _   _   _   _
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   0   1   2
   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   _   3   4   _   _   _
----------------------------------------------------------------------------------------

Seed (before)

0AA0A0AAAA000A00AA0A0AAAA000A00A
B0B0BBBB000B00BB0G0GGHH000000000
E00CD0E0FEFD000C00CD0E0CEED000C
Seed (after)

CAADAEAAAADECAECAADACAAAADECAEEA
BFBFBBBBHHGBGGBB

Processing scheme

Output row #0
Input row #  0                               0AA0A0AAAA000A00AA0A0AAAA000A00A
Input row #  2                            000C00000000000C00C0000C000000C0
Input row #  2                              0000D000000D0000000D000000D00000
Input row #  2                                    E00000E00E00000000000E00EE000000

Output row #1
Input row #  1                               B0B0BBBB000B00BB0000000000000000
Input row #  2                        00000000F0F000000000000000000000
Input row #  1                        00000000000000000G0GG00000000000
Input row #  1                  000000000000000000000HH000000000

SIMD function

void compactSeed(__m128i *vmIn, __m128i *vmOut){
	vmOut[0] = _mm_and_si128(vmIn[1], _mm_set1_epi32(0x91eb23d6));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x40848008)), 3));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x04080810)), 1));
	vmOut[0] = _mm_or_si128(vmOut[0], _mm_slli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x03200241)), 5));
	vmOut[1] = _mm_and_si128(vmIn[2], _mm_set1_epi32(0x0000c8f5));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[0], _mm_set1_epi32(0x00000500)), 7));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x001a0000)), 7));
	vmOut[1] = _mm_or_si128(vmOut[1], _mm_srli_epi32(_mm_and_si128(vmIn[2], _mm_set1_epi32(0x00600000)), 13));
}

